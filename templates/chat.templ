package templates

import "github.com/carlosarguelles/messages/internal"
import "fmt"

templ Chat(chat internal.Chat, username string, messages []internal.Message) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<title>{ chat.Name }</title>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/ws.js"></script>
			<link rel="stylesheet" href="/public/css/main.css"/>
		</head>
		<body class="antialiased" onload="scrollChat()">
			<div class="h-[calc(100dvh)] flex flex-col overflow-hidden">
				<div class="text-center p-4 space-y-4 border-b-gray-300 border-b">
					<h1 class="text-xl font-bold">{ chat.Name }</h1>
					<span class="text-xs text-gray-500">
						All messages sent here will be deleted on
						{ chat.ExpiresAt() }
					</span>
				</div>
				<div id="messages-container" hx-ext="ws" class="flex-1 px-4 overflow-scroll" ws-connect={ fmt.Sprintf("/ws?chatID=%s", chat.ID) }>
					<div id="messages" class="flex flex-col gap-2 justify-end py-4">
						for _, v := range messages {
							@v.Content
						}
					</div>
				</div>
				if username != "" {
					@MessageForm(chat.ID, username, true)
				} else {
					@UsernameForm(chat.ID)
				}
			</div>
			<script>
        function scrollChat() {
          let element = document.getElementById("messages-container")
          element.scrollTo(0, element.scrollHeight)
        }
        document.addEventListener("htmx:wsAfterMessage", scrollChat)
      </script>
		</body>
	</html>
}
